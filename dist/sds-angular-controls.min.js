/*! 
 * sds-angular-controls
 * Angular Directives used with sds-angular generator
 * @version 1.2.6 
 * 
 * Copyright (c) 2016 Steve Gentile, David Benson 
 * @link https://github.com/SMARTDATASYSTEMSLLC/sds-angular-controls 
 * @license  MIT 
 */

angular.module("sds-angular-controls",["ui.bootstrap","ngSanitize","currencyMask"]).constant("_",window._).constant("moment",window.moment),function(){"use strict";function a(){return function(a){return a.toLowerCase().replace(/ (\w)/g,function(a,b){return b.toUpperCase()})}}angular.module("sds-angular-controls").filter("camelCase",a)}(),function(){"use strict";function a(){return function(a,b){var c={};return angular.forEach(a,function(a,d){d!==b&&(c[d]=a)}),c}}angular.module("sds-angular-controls").filter("keyFilter",a)}(),function(){"use strict";function a(){return function(a){return(null===a||void 0===a||""===a)&&(a=" "),a=(a+"").replace(/([A-Z])/g," $1"),a[0].toUpperCase()+a.slice(1)}}angular.module("sds-angular-controls").filter("labelCase",a)}(),function(){"use strict";function a(){var a=["th","st","nd","rd"];return function(b){var c=b%100;return b+(a[(c-20)%10]||a[c]||a[0])}}angular.module("sds-angular-controls").filter("ordinal",a)}(),function(){"use strict";function a(a){return a.trustAsHtml}a.$inject=["$sce"],angular.module("sds-angular-controls").filter("unsafe",a)}(),function(){"use strict";function a(a){return{restrict:"E",transclude:!0,replace:!0,scope:{buttonClass:"@?",action:"&"},template:'<a href="" class="btn {{buttonClass}} {{isDisabled}}" ng-click="doPromise($event)" ng-transclude></a>',link:function(b,c,d){b.buttonClass=b.buttonClass||"btn-default",b.isDisabled="",b.doPromise=function(c){b.isDisabled||(b.isDisabled="disabled",a.when(b.action(c)).then(function(){b.isDisabled=""},function(){b.isDisabled=""}))}}}}a.$inject=["$q"],angular.module("sds-angular-controls").directive("formButton",a)}(),function(){"use strict";function a(a,b,c,d){return{restrict:"A",terminal:!0,priority:1e3,require:["^formField"],link:function(e,f,g,h){var i,j=h[0];f.attr("maxLength")||(f.is("input")&&f.attr("maxLength",255),f.is("textarea")&&f.attr("maxLength",5e3)),i=j.$scope.validationFieldName?j.$scope.validationFieldName:g.name||g.ngModel&&g.ngModel.substr(g.ngModel.lastIndexOf(".")+1)||g.sdsModel&&g.sdsModel.substr(g.sdsModel.lastIndexOf(".")+1),i||alert("control must have a name via validationFieldName or model(ng/sds)"),f.attr("name",i),f.attr("ng-required",g.ngRequired||"{{container.isRequired}}"),f.removeAttr("form-control"),f.removeAttr("data-form-control"),f.is("input, select, textarea")&&f.addClass("form-control"),e.container=j.$scope,j.$scope.tel=!1,"tel"===f.attr("type")&&(j.$scope.tel=!0,f.attr("ng-pattern",/^\(?[0-9]{3}(\-|\)) ?[0-9]{3}-[0-9]{4}$/)),j.$scope.field=i,g.min&&(j.$scope.min=g.min),g.max&&(j.$scope.max=g.max),g.layoutCss&&"horizontal"===j.$scope.layout&&(j.$scope.childLayoutCss=g.layoutCss);var k=d.find(c,function(a,b){return f.is(b)});k||(k=function(a){return function(){return a()}});var l=function(a,b){for(var c=b.split(".");c.length&&(a=a[c.shift()]););return a};j.$scope.valueFormatter=a.invoke(k,this,{ngModel:l.bind(this,e,g.ngModel),$attrs:g,$scope:e}),b(f)(e)}}}a.$inject=["$injector","$compile","formControlFormatters","_"];var b={"select[ng-options]":function(a,b,c,d){var e=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,f=b.ngOptions.match(e),g=f[5]||f[7],h=c(f[8]),i=c(/ as /.test(f[0])||f[2]?f[1]:g),j=c(f[2]||f[1]);return function(){var b=a(),c={};return c[g]=_.find(h(d),function(a){var c={};return c[g]=a,i(d,c)===b}),j(d,c)}},"select[selectize]":function(a,b,c,d){return function(){return a()}},"toggle-switch":function(a,b){return function(){return a()?b.onLabel:b.offLabel}},timepicker:function(a,b){return function(){return moment(a()).format("h:mm a")}},"input[datepicker-popup]":function(a,b,c,d){return function(){return moment(a()).format(d(b.datepickerPopup)(c).replace(/d/g,"D").replace(/E/g,"d").replace(/y/g,"Y"))}}};angular.module("sds-angular-controls").directive("formControl",a).constant("formControlFormatters",b)}(),function(){"use strict";function a(){return{restrict:"EA",require:"^form-field",replace:!0,scope:{sdsModel:"=",dateFormat:"@",max:"=?",min:"=?",placeholder:"@?"},templateUrl:"sds-angular-controls/form-directives/form-date-picker.html",link:function(a,b,c,d){b.find("input");a.container=d.$scope,a.dateFormat=a.dateFormat||"MM-dd-yyyy",a.calendar={opened:!1},a.open=function(b){b.preventDefault(),b.stopPropagation(),a.isOpened=!0},a.$watch("sdsModel",function(b){"string"==typeof b&&(a.sdsModel=moment.utc(b).toDate())}),d.$scope.field=c.name||c.sdsModel.substr(c.sdsModel.lastIndexOf(".")+1),a.max&&(d.$scope.max=moment.utc(a.max).format(a.dateFormat.toUpperCase())),a.min&&(d.$scope.min=moment.utc(a.min).format(a.dateFormat.toUpperCase()))}}}function b(){return{restrict:"EAC",require:"ngModel",link:function(a,b,c,d){d.$formatters.shift()}}}angular.module("sds-angular-controls").directive("formDatePicker",a).directive("datepickerPopup",b)}(),function(){"use strict";function a(){return{restrict:"EA",transclude:!0,replace:!0,scope:{record:"=",isRequired:"=?",isReadonly:"=?",field:"@",label:"@",layout:"@?",labelCss:"@?",layoutCss:"@?",tel:"=?",showLabel:"=?",showHelpText:"=?",showToolTip:"=?",helpText:"@?",errorLayoutCss:"@?",hideValidationMessage:"=?",validationFieldName:"@?",validationFieldLabel:"@?"},templateUrl:"sds-angular-controls/form-directives/form-field.html",require:"^form",controller:["$scope",function(a){this.$scope=a}],link:function(a,b,c,d){a.showLabel=a.showLabel!==!1,a.showHelpText=a.showHelpText||!1,a.showToolTip=a.showToolTip||!1,a.hideValidationMessage=a.hideValidationMessage||!1,a.layoutCss=a.layoutCss||"col-md-12",a.errorLayoutCss=a.errorLayoutCss||"col-md-12",a.layout=a.layout||"stacked","horizontal"===a.layout&&(a.labelCss=a.labelCss||"col-md-4"),b.on("focus","[name]",function(){a.isFocused=!0}).on("blur","[name]",function(){a.isFocused=!1}),a.showError=function(){if(a.field&&d&&d[a.field]){var b=d[a.field];return b.$invalid&&(d.$submitted||b.$dirty&&!a.isFocused)}},a.getError=function(){return a.field&&d&&d[a.field]?d[a.field].$error:void 0}}}}angular.module("sds-angular-controls").directive("formField",a)}(),function(){"use strict";function a(a){}a.$inject=["$scope"],angular.module("sds-angular-controls").controller("UnsavedConfirmationModalCtrl",a)}(),function(){"use strict";function a(a,b,c,d){return{restrict:"A",require:"^form",link:function(a,e,f,g){function h(e){if(g.$dirty){d.endAll(),e.preventDefault();var f=b.path();c.open({templateUrl:"sds-angular-controls/form-directives/form-unsaved-modal.html",scope:a}).result.then(function(a){"CONTINUE"===a&&(g.$setPristine(),b.path(f))})}}a.$on("$routeChangeStart",h)}}}a.$inject=["$rootScope","$location","$modal","progressLoader"],angular.module("sds-angular-controls").directive("formUnsaved",a)}(),function(){"use strict";function a(a,b,c,d,e){var f=0,g=null;return{wait:function(a,b){return b&&this.start(),a.then(this.end,function(a){return c.reject(this.end(a))})},start:function(a){if(++f<2){var b={message:'<i class="fa fa-spinner fa-spin"></i>',baseZ:9999,ignoreIfBlocked:!0,css:{border:"none",padding:"15px",backgroundColor:"#000","-webkit-border-radius":"10px","-moz-border-radius":"10px",opacity:.5,color:"#fff",width:"144px","font-size":"72px",left:"50%","margin-left":"-50px"}};angular.extend(b,a),$.blockUI(b)}return a},end:function(a){return--f<1&&(g&&g.update({delay:0,hide:!0}),$.unblockUI(),f=0),a},endAll:function(a){return g&&g.update({delay:0,hide:!0}),$.unblockUI(),f=0,a},attachToRoute:function(a){var b=this;b.lastUrl=e.path(),d.$on("$routeChangeStart",function(a,c){b.lastUrl!==e.path()&&b.start(),b.lastUrl=e.path()}),d.$on("$routeChangeSuccess",function(c,e){e&&e.title?d.title=e.title:d.title=a,b.endAll()}),d.$on("$routeChangeError",function(){b.endAll()}),d.$on("cancelProgressLoader",function(){b.endAll()})}}}a.$inject=["$timeout","$window","$q","$rootScope","$location"],angular.module("sds-angular-controls").factory("progressLoader",a)}(),angular.module("sds-angular-controls").run(["$templateCache",function(a){"use strict";a.put("sds-angular-controls/form-directives/form-date-picker.html",'<span class="input-group"> <input type="text" form-control class="datepicker" placeholder="{{placeholder || container.label}}" ng-model="sdsModel" min-date="min" max-date="max" datepicker-popup="{{::dateFormat}}" is-open="isOpened"> <span class="input-group-btn"> <button type="button" class="btn btn-default" ng-click="open($event)"><i class="glyphicon glyphicon-calendar"></i></button> </span> </span>'),a.put("sds-angular-controls/form-directives/form-field-validation.html",'<div ng-if="!hideValidationMessage" class="has-error" ng-show="showError()" ng-messages="getError()"> <span class="control-label" ng-message="required"> {{ validationFieldLabel || label || (field | labelCase) }} is required. </span> <span class="control-label" ng-message="text"> {{ validationFieldLabel || label || (field | labelCase) }} should be text. </span> <span class="control-label" ng-message="integer"> {{ validationFieldLabel || label || (field | labelCase) }} should be an integer. </span> <span class="control-label" ng-message="email"> {{ validationFieldLabel || label || (field | labelCase) }} should be an email address. </span> <span class="control-label" ng-message="date"> {{ validationFieldLabel || label || (field | labelCase) }} should be a date. </span> <span class="control-label" ng-message="datetime"> {{ validationFieldLabel || label || (field | labelCase) }} should be a datetime. </span> <span class="control-label" ng-message="time"> {{ validationFieldLabel || label || (field | labelCase) }} should be a time. </span> <span class="control-label" ng-message="month"> {{ validationFieldLabel || label || (field | labelCase) }} should be a month. </span> <span class="control-label" ng-message="week"> {{ validationFieldLabel || label || (field | labelCase) }} should be a week. </span> <span class="control-label" ng-message="url"> {{ validationFieldLabel || label || (field | labelCase) }} should be an url. </span> <span class="control-label" ng-message="zip"> {{ validationFieldLabel || label || (field | labelCase) }} should be a valid zipcode. </span> <span class="control-label" ng-message="number"> {{ validationFieldLabel || label || (field | labelCase) }} must be a number</span> <span class="control-label" ng-message="tel"> {{ validationFieldLabel || label || (field | labelCase) }} must be a phone number</span> <span ng-if="tel === true" class="control-label" ng-message="pattern"> {{ validationFieldLabel || label || (field | labelCase) }} must be a phone number (xxx-xxx-xxxx or (xxx) xxx-xxxx) : {{tel}}</span> <span class="control-label" ng-message="color"> {{ validationFieldLabel || label || (field | labelCase) }} must be a color</span> <span class="control-label" ng-message="min"> {{ validationFieldLabel || label || (field | labelCase) }} must be at least {{min}}. </span> <span class="control-label" ng-message="max"> {{ validationFieldLabel || label || (field | labelCase) }} must not exceed {{max}} </span> <span class="control-label" ng-message="taMaxText"> {{ validationFieldLabel || label || (field | labelCase) }} must not exceed {{max}} </span> <span class="control-label" ng-repeat="(k, v) in types" ng-message="{{k}}"> {{ validationFieldLabel || label || (field | labelCase) }}{{v[1]}}</span> </div>'),a.put("sds-angular-controls/form-directives/form-field.html",'<div> <div ng-if="layout === \'stacked\'" class="row"> <div class="form-group clearfix" ng-class="{ \'has-error\': showError() }"> <div class="{{layoutCss}}"> <label ng-if="showLabel" class="control-label {{labelCss}}"> {{ label || (field | labelCase) }} <span ng-if="isRequired && !isReadonly">*</span> <span ng-if="showToolTip"><a href="#" uib-popover="{{helpText}}" popover-trigger="mouseenter"><i class="fa fa-question-circle"></i></a></span> <!--<span ng-if="showToolTip" uib-popover="{{helpText}}" popover-trigger="mouseenter"><i class="fa fa-question-circle"></i></span>--> </label> <div ng-if="!valueFormatter || !isReadonly"><ng-transclude></ng-transclude></div> <input ng-if="valueFormatter && isReadonly" class="form-control" type="text" ng-value="valueFormatter()" name="{{field}}" readonly> <!-- validation --> <div class="pull-left" ng-include="\'sds-angular-controls/form-directives/form-field-validation.html\'"></div> <div ng-if="showHelpText && !showToolTip" style="color: #999; font-size: 12px"> <i>{{helpText}}</i> </div> </div> </div> </div> <div ng-if="layout === \'horizontal\'" class="row inline-control"> <div class="form-group clearfix" ng-class="{ \'has-error\': showError() }"> <label ng-if="showLabel" class="control-label {{labelCss}}"> {{ label || (field | labelCase) }} <span ng-if="isRequired && !isReadonly">*</span></label> <div class="{{childLayoutCss || \'col-md-6\'}}"> <span ng-if="!valueFormatter || !isReadonly"><ng-transclude></ng-transclude></span> <input ng-if="valueFormatter && isReadonly" class="form-control" type="text" ng-value="valueFormatter()" name="{{field}}" readonly> </div> <!-- validation --> <div ng-if="!hideValidationMessage" ng-show="showError()" class="popover validation right alert-danger" style="display:inline-block; top:auto; left:auto; margin-top:-4px; min-width:240px"> <div class="arrow" style="top: 20px"></div> <div class="popover-content" ng-include="\'sds-angular-controls/form-directives/form-field-validation.html\'"> </div> </div> </div> </div> <div ng-if="layout !== \'stacked\' && layout !== \'horizontal\'" ng-class="{ \'has-error\': showError() }" class="grid-control {{::layoutCss}}"> <span ng-if="!valueFormatter || !isReadonly"><ng-transclude></ng-transclude></span> <input ng-if="valueFormatter && isReadonly" class="form-control" type="text" ng-value="valueFormatter()" name="{{field}}" readonly> </div> </div>'),a.put("sds-angular-controls/form-directives/form-unsaved-modal.html",'<div id="add-control-modal"> <div class="modal-header"> <h4 class="modal-title">Leave Page?</h4> </div> <div class="modal-body"> <strong>You haven\'t saved your changes. Do you want to leave without finishing ?</strong> </div> <div class="modal-footer"> <button type="button" class="btn btn-primary" ng-click="$dismiss()">Stay on This Page</button> <button type="button" class="btn btn-secondary" ng-click="$close(\'CONTINUE\')">Leave This Page</button> </div> </div>')}]),angular.module("currencyMask",[]).directive("currencyMask",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){var e=function(a,b){void 0==b&&(b=!1),a=a.toString();var c="-"===a[0];a=a.replace(/[^0-9\.]/g,"");var d=a.split(".");return d[0]=d[0].replace(/\d{1,3}(?=(\d{3})+(?!\d))/g,"$&,"),d[1]&&d[1].length>2&&(d[1]=d[1].substring(0,2)),b&&d[1]&&1===d[1].length&&(d[1]=d[1]+"0"),(c?"-":"")+d.join(".")},f=function(){var a=b.val(),c=a;a&&0!=a.length&&(a=e(a),a!=c&&(b.val(a),b.triggerHandler("input")))};b.bind("keyup",function(a){var b=a.keyCode,c=b>47&&58>b||32==b||8==b||b>64&&91>b||b>95&&112>b||b>185&&193>b||b>218&&223>b;c&&f()}),d.$parsers.push(function(a){return a&&0!=a.length?(a=a.toString(),a=a.replace(/[^0-9\.\-]/g,"")):a}),d.$formatters.push(function(a){return a&&0!=a.length?a=e(a,!0):a})}}}),function(){"use strict";function a(){return{restrict:"A",scope:{maskInput:"@"},link:function(a,b){a.maskInput&&$(b).mask(a.maskInput)}}}angular.module("sds-angular-controls").directive("maskInput",a)}(),function(){"use strict";function a(){return function(a){if(!a)return"";var b=a.toString().trim().replace(/^\+/,"");if(b.match(/[^0-9]/))return a;var c,d,e;switch(b.length){case 10:c=1,d=b.slice(0,3),e=b.slice(3);break;case 11:c=b[0],d=b.slice(1,4),e=b.slice(4);break;case 12:c=b.slice(0,3),d=b.slice(3,5),e=b.slice(5);break;default:return a}return 1===c&&(c=""),e=e.slice(0,3)+"-"+e.slice(3),(c+" ("+d+") "+e).trim()}}angular.module("sds-angular-controls").filter("phoneNumber",a)}();
//# sourceMappingURL=sds-angular-controls.min.js.map